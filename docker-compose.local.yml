# Docker Compose configuration for LOCAL DEVELOPMENT
# Use this file with: docker-compose -f docker-compose.local.yml up --build
# This configuration builds containers from source code rather than using pre-built images
# NOTE: For local development, this uses the .env file for configuration
# In production (with docker-compose.yml), Parameter Store is used instead

services:
  # Backend FastAPI service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
      args:
        USE_S3_DATA: "true" 
        AUTO_UPLOAD_DATA: "false"
    container_name: backend-local
    volumes:
      - ./data:/app/data  # Mount the data directory for persistent storage
    env_file:
      - .env  # Load environment variables from .env file (LOCAL DEVELOPMENT ONLY)
    environment:
      - CHROMA_DB_PATH=/app/data/chroma  # Set ChromaDB path inside the container
      - ENV=development  # Set environment to development to use .env file
      - S3_DATA_BUCKET=${S3_DATA_BUCKET:-conversational-resume}
      - USE_S3_DATA=${USE_S3_DATA:-true}
      - AUTO_UPLOAD_DATA=${AUTO_UPLOAD_DATA:-false}
    restart: unless-stopped
    networks:
      - app-network
    ports:
      - "8000:8000"  # Expose the FastAPI port
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Frontend React service
  frontend:
    build: ./frontend
    container_name: frontend-local
    restart: unless-stopped
    ports:
      - "3000:80"  # Expose the frontend on port 3000, served by Nginx on port 80 inside the container
    environment:
      - REACT_APP_API_URL=http://backend-local:8000  # Connect to the backend service
    depends_on:
      backend:
        condition: service_healthy  # Wait for backend to be healthy before starting
    networks:
      - app-network

# Shared network for service communication
networks:
  app-network:
    driver: bridge 